// Generated by Flux, not meant for human consumption.  Editing may make it unreadable by Flux.

package audio

func (x2 *AttackReleaseEnv) Sing() (x Audio, done bool) {
	var v *AttackReleaseEnv
	var v2 *AttackReleaseEnv
	var v3 *AttackReleaseEnv
	var v4 *AttackReleaseEnv
	var v5 *AttackReleaseEnv
	var v6 Audio
	var v7 bool
	var v8 *AttackReleaseEnv
	var v9 *AttackReleaseEnv
	var v10 Audio
	v8 = x2//env
	v = x2//env
	v9 = x2//env
	v2 = x2//env
	v3 = x2//env
	v4 = x2//env
	v5 = x2//env
	x22 := &v3.Out
	v6 = *x22
	x = *x22
	v10 = *x22
	x3 := &v4.release
	v7 = *x3
	if v7 {
		var v11 float64
		var v12 float64
		x4 := &v5.x
		v11 = *x4
		const x5 = 0.0001
		v12 = x5
		x6 := v11 < v12
		done = x6
		for i := range v10 {
			var v13 = &v10[i]
			var v14 *float64
			var v15 *float64
			var v16 float64
			var v17 float64
			var v18 float64
			var v19 float64
			v14 = v13
			x7 := &v8.x
			v15 = x7
			v16 = *x7
			x8 := &v.down
			v17 = *x8
			x9 := v16 * v17
			v18 = x9
			v19 = x9
			*v14 = v19
			*v15 = v18
		}
	} else  {
		for i2 := range v6 {
			var v20 = &v6[i2]
			var v21 *float64
			var v22 float64
			var v23 float64
			var v24 float64
			var v25 *float64
			var v26 float64
			var v27 float64
			var v28 float64
			var v29 float64
			var v30 float64
			v25 = v20
			const x10 = 1
			v28 = x10
			x11 := &v2.up
			v26 = *x11
			const x12 = 1
			v29 = x12
			x13 := &v9.x
			v27 = *x13
			v21 = x13
			x14 := v29 - v27
			v22 = x14
			x15 := v26 * v22
			v30 = x15
			x16 := v28 - v30
			v24 = x16
			v23 = x16
			*v25 = v24
			*v21 = v23
		}
	}
	return
}
