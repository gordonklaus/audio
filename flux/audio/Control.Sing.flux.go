// Generated by Flux, not meant for human consumption.  Editing may make it unreadable by Flux.

package audio

func (x *Control) Sing() (x2 Audio, done bool) {
	var v *Params
	var v2 int
	var v3 float64
	var v4 int
	var v5 *Params
	var v6 int
	var v7 int
	var v8 []float64
	var v9 []ControlPeriod
	var v10 []ControlPeriod
	var v11 int
	var v12 Audio
	var v13 float64
	var v14 float64
	var v15 int
	var v16 int
	var v17 int
	var v18 int
	var v19 int
	var v20 *Control
	var v21 *Control
	var v22 float64
	var v23 int
	var v24 int
	var v25 int
	var v26 *Control
	var v27 *Control
	var v28 *float64
	var v29 float64
	var v30 *Control
	var v31 Audio
	var v32 *int
	var v33 *Control
	var v34 float64
	var v35 float64
	var v36 int
	v30 = x
	v33 = x
	v21 = x
	v26 = x
	v27 = x
	v20 = x
	x22 := &v30.t
	v28 = x22//t
	v13 = *x22//t
	v22 = *x22
	x3 := &v21.Params
	v5 = x3
	v = x3
	x4 := &v.BufferSize
	v2 = *x4
	x5 := (float64)(v2)
	v29 = x5
	x6 := &v5.SampleRate
	v14 = *x6
	v3 = *x6
	x7 := v29 / v3
	v34 = x7
	x8 := v22 + v34
	v35 = x8
	x9 := &v20.i
	v11 = *x9//i
	v19 = *x9//i
	v32 = x9//i
	v4 = *x9//i
	v6 = *x9//i
	v18 = *x9//i
	x10 := &v27.Periods
	v9 = *x10
	v10 = *x10
	x11 := len(v10)
	v24 = x11
	v36 = x11
	x12 := &v26.Out
	x2 = *x12
	v31 = *x12
	v12 = *x12
	x13 := len(v31)
	v16 = x13//max
	v17 = x13//max
	v15 = x13//max
	x14 := &v33.elapsed
	v8 = *x14
	for {
		var v37 bool
		var v38 bool
		var v39 int
		var v40 int
		var v41 int
		var v42 float64
		var v43 bool
		var v44 float64
		var v45 int
		var v46 Audio
		var v47 bool
		var v48 ControlPeriod
		var v49 float64
		x15 := v6 >= v36
		v37 = x15
		x16 := v23 >= v17
		v47 = x16
		x17 := v37 || v47
		v38 = x17
		if v38 {
			break
		}//;0
		x18 := &v9[v18]//0;
		v48 = *x18
		x19 := &v8[v11]//0;
		v42 = *x19
		x20 := v42 - v13
		v44 = x20
		x21 := v44 * v14
		v49 = x21
		x222 := (int)(v49)
		v39 = x222
		v40 = x222
		x23 := v39 > v15
		v43 = x23
		if v43 {
			var v50 int
			x24 := v16 + v50
			v40 = x24
		} else  {
			var v51 int
			const x25 = 1
			v51 = x25
			x26 := v19 + v51
			v19 = x26//ii
			v18 = x26//ii
			v25 = x26
			v4 = x26//ii
			v11 = x26//ii
			v6 = x26//ii
		}
		var v52 int
		x27 := v40 + v52
		v45 = x27
		v23 = x27//n
		v41 = x27
		x28 := v12[v7:v45]
		v46 = x28
		v48.Control(v46)
		var v53 int
		x29 := v41 + v53
		v7 = x29
	}//;1
	*v28 = v35//1;
	x30 := v25 == v24
	done = x30
	*v32 = v4
	return
}
