// Generated by Flux, not meant for human consumption.  Editing may make it unreadable by Flux.

package audio

func (x *Control) sing() (x2 Audio, done bool) {
	var v *Control
	var v2 float64
	var v3 *Params
	var v4 int
	var v5 float64
	var v6 *Control
	var v7 *Control
	var v8 float64
	var v9 *float64
	var v10 float64
	var v11 float64
	var v12 []ControlPeriod
	var v13 int
	var v14 float64
	var v15 *Control
	var v16 int
	var v17 int
	var v18 *Params
	var v19 float64
	var v20 *Control
	var v21 []ControlPeriod
	v20 = x
	v6 = x
	v7 = x
	v = x
	v15 = x
	x22 := &v6.t
	v9 = x22
	v10 = *x22	//t0
	v2 = *x22
	x3 := &v7.Params
	v18 = x3
	v3 = x3
	x4 := &v18.BufferSize
	v4 = *x4
	x5 := (float64)(v4)
	v5 = x5
	x6 := &v3.SampleRate
	v11 = *x6
	v14 = *x6
	x7 := v5 / v11
	v19 = x7
	x8 := v2 + v19
	v8 = x8
	*v9 = v8
	x9 := &v.Out
	x2 = *x9
	x10 := &v15.Points
	v21 = *x10
	v12 = *x10
	x11 := &v20.i
	v17 = *x11	//i
	v13 = *x11	//i
	x12 := len(v12)
	v16 = x12
	for {
		var v22 *ControlPeriod
		var v23 float64
		var v24 float64
		var v25 float64
		var v26 int
		var v27 bool
		x13 := v13 >= v16
		v27 = x13
		if v27 {
			const x14 = true	//;0
			done = x14
			return	//0;
		}	//;1
		x15 := &v21[v17]	//1;
		v22 = x15
		x16 := &v22.Until
		v23 = *x16
		x17 := v23 - v10
		v24 = x17
		x18 := v24 * v14
		v25 = x18
		x19 := (int)(v25)
		v26 = x19
		for i := int(0); i < v26; i++ {
		}
	}
	return
}
